{"ast":null,"code":"\"use client\";\n\nimport { midnightTheme } from \"./chunk-WP6TGA7H.js\";\nimport { darkTheme } from \"./chunk-BSMW2B2K.js\";\nimport { ConnectButton, DesktopOptions, MobileOptions, RainbowKitAuthenticationProvider, RainbowKitProvider, createAuthenticationAdapter, cssObjectFromTheme, cssStringFromTheme, dialogContent, dialogContentMobile, isAndroid, isHexString, isIOS, isMobile, useAccountModal, useChainId, useChainModal, useConnectModal, useTransactionStore } from \"./chunk-LAWPQJXA.js\";\nimport { lightTheme } from \"./chunk-Q4HVINFA.js\";\nimport \"./chunk-SWKUKXRF.js\";\n\n// src/wallets/connectorsForWallets.ts\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\n\n// src/utils/omitUndefinedValues.ts\nfunction omitUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(([_key, value]) => value !== void 0));\n}\n\n// src/wallets/connectorsForWallets.ts\nvar connectorsForWallets = walletList => {\n  return () => {\n    let index = -1;\n    const connectors = [];\n    const visibleWallets = [];\n    const potentiallyHiddenWallets = [];\n    const walletInstances = [];\n    walletList.forEach(({\n      groupName,\n      wallets\n    }, groupIndex) => {\n      wallets.forEach(wallet => {\n        index++;\n        if ((wallet == null ? void 0 : wallet.iconAccent) && !isHexString(wallet == null ? void 0 : wallet.iconAccent)) {\n          throw new Error(`Property \\`iconAccent\\` is not a hex value for wallet: ${wallet.name}`);\n        }\n        const walletListItem = {\n          ...wallet,\n          groupIndex,\n          groupName,\n          index\n        };\n        if (typeof wallet.hidden === \"function\") {\n          potentiallyHiddenWallets.push(walletListItem);\n        } else {\n          visibleWallets.push(walletListItem);\n        }\n      });\n    });\n    const walletListItems = [...visibleWallets, ...potentiallyHiddenWallets];\n    walletListItems.forEach(({\n      createConnector: createConnector2,\n      groupIndex,\n      groupName,\n      hidden,\n      index: index2,\n      ...walletMeta\n    }) => {\n      if (typeof hidden === \"function\") {\n        const isHidden = hidden({\n          wallets: [...walletInstances.map(({\n            connector: connector2,\n            id,\n            installed,\n            name\n          }) => ({\n            connector: connector2,\n            id,\n            installed,\n            name\n          }))]\n        });\n        if (isHidden) {\n          return;\n        }\n      }\n      const {\n        connector,\n        ...connectionMethods\n      } = omitUndefinedValues(createConnector2());\n      let walletConnectModalConnector;\n      if (walletMeta.id === \"walletConnect\" && connectionMethods.qrCode && !isMobile()) {\n        const {\n          chains,\n          options\n        } = connector;\n        walletConnectModalConnector = new WalletConnectConnector({\n          chains,\n          options: {\n            ...options,\n            showQrModal: true\n          }\n        });\n        connectors.push(walletConnectModalConnector);\n      }\n      const walletInstance = {\n        connector,\n        groupIndex,\n        groupName,\n        index: index2,\n        walletConnectModalConnector,\n        ...walletMeta,\n        ...connectionMethods\n      };\n      walletInstances.push(walletInstance);\n      if (!connectors.includes(connector)) {\n        connectors.push(connector);\n        connector._wallets = [];\n      }\n      connector._wallets.push(walletInstance);\n    });\n    return connectors;\n  };\n};\n\n// src/wallets/walletConnectors/braveWallet/braveWallet.ts\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nvar braveWallet = ({\n  chains,\n  ...options\n}) => {\n  var _a;\n  return {\n    id: \"brave\",\n    name: \"Brave Wallet\",\n    iconUrl: async () => (await import(\"./braveWallet-BTBH4MDN.js\")).default,\n    iconBackground: \"#fff\",\n    installed: typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isBraveWallet) === true,\n    downloadUrls: {},\n    createConnector: () => ({\n      connector: new InjectedConnector({\n        chains,\n        options\n      })\n    })\n  };\n};\n\n// src/wallets/walletConnectors/coinbaseWallet/coinbaseWallet.ts\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\nvar coinbaseWallet = ({\n  appName,\n  chains,\n  ...options\n}) => {\n  var _a;\n  const isCoinbaseWalletInjected = typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isCoinbaseWallet) === true;\n  return {\n    id: \"coinbase\",\n    name: \"Coinbase Wallet\",\n    shortName: \"Coinbase\",\n    iconUrl: async () => (await import(\"./coinbaseWallet-2OUR5TUP.js\")).default,\n    iconAccent: \"#2c5ff6\",\n    iconBackground: \"#2c5ff6\",\n    installed: isCoinbaseWalletInjected || void 0,\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=org.toshi\",\n      ios: \"https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455\",\n      mobile: \"https://coinbase.com/wallet/downloads\",\n      qrCode: \"https://coinbase-wallet.onelink.me/q5Sx/fdb9b250\",\n      chrome: \"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad\",\n      browserExtension: \"https://coinbase.com/wallet\"\n    },\n    createConnector: () => {\n      const ios = isIOS();\n      const connector = new CoinbaseWalletConnector({\n        chains,\n        options: {\n          appName,\n          headlessMode: true,\n          ...options\n        }\n      });\n      const getUri = async () => (await connector.getProvider()).qrUrl;\n      return {\n        connector,\n        ...(ios ? {} : {\n          qrCode: {\n            getUri,\n            instructions: {\n              learnMoreUrl: \"https://coinbase.com/wallet/articles/getting-started-mobile\",\n              steps: [{\n                description: \"We recommend putting Coinbase Wallet on your home screen for quicker access.\",\n                step: \"install\",\n                title: \"Open the Coinbase Wallet app\"\n              }, {\n                description: \"You can easily backup your wallet using the cloud backup feature.\",\n                step: \"create\",\n                title: \"Create or Import a Wallet\"\n              }, {\n                description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n                step: \"scan\",\n                title: \"Tap the scan button\"\n              }]\n            }\n          },\n          extension: {\n            instructions: {\n              learnMoreUrl: \"https://coinbase.com/wallet/articles/getting-started-extension\",\n              steps: [{\n                description: \"We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.\",\n                step: \"install\",\n                title: \"Install the Coinbase Wallet extension\"\n              }, {\n                description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n                step: \"create\",\n                title: \"Create or Import a Wallet\"\n              }, {\n                description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\n                step: \"refresh\",\n                title: \"Refresh your browser\"\n              }]\n            }\n          }\n        })\n      };\n    }\n  };\n};\n\n// src/wallets/walletConnectors/injectedWallet/injectedWallet.ts\nimport { InjectedConnector as InjectedConnector2 } from \"wagmi/connectors/injected\";\nvar injectedWallet = ({\n  chains,\n  ...options\n}) => ({\n  id: \"injected\",\n  name: \"Browser Wallet\",\n  iconUrl: async () => (await import(\"./injectedWallet-EUKDEAIU.js\")).default,\n  iconBackground: \"#fff\",\n  hidden: ({\n    wallets\n  }) => wallets.some(wallet => wallet.installed && wallet.name === wallet.connector.name && (wallet.connector instanceof InjectedConnector2 || wallet.id === \"coinbase\")),\n  createConnector: () => ({\n    connector: new InjectedConnector2({\n      chains,\n      options\n    })\n  })\n});\n\n// src/wallets/walletConnectors/metaMaskWallet/metaMaskWallet.ts\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n\n// src/utils/getWalletConnectUri.ts\nasync function getWalletConnectUri(connector, version) {\n  const provider = await connector.getProvider();\n  return version === \"2\" ? new Promise(resolve => provider.once(\"display_uri\", resolve)) : provider.connector.uri;\n}\n\n// src/wallets/getWalletConnectConnector.ts\nimport { WalletConnectConnector as WalletConnectConnector2 } from \"wagmi/connectors/walletConnect\";\nimport { WalletConnectLegacyConnector } from \"wagmi/connectors/walletConnectLegacy\";\nvar sharedConnectors = /* @__PURE__ */new Map();\nfunction createConnector(version, config) {\n  const connector = version === \"1\" ? new WalletConnectLegacyConnector(config) : new WalletConnectConnector2(config);\n  sharedConnectors.set(JSON.stringify(config), connector);\n  return connector;\n}\nfunction getWalletConnectConnector({\n  chains,\n  options = {},\n  projectId,\n  version = \"2\"\n}) {\n  const exampleProjectId = \"21fef48091f12692cad574a6f7753643\";\n  if (version === \"2\") {\n    if (!projectId || projectId === \"\") throw new Error(\"No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure\");else if (projectId === \"YOUR_PROJECT_ID\" || projectId === exampleProjectId) console.warn(\"Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure\");\n  }\n  const config = {\n    chains,\n    options: version === \"1\" ? {\n      qrcode: false,\n      ...options\n    } : {\n      projectId: projectId === \"YOUR_PROJECT_ID\" ? exampleProjectId : projectId,\n      showQrModal: false,\n      ...options\n    }\n  };\n  const serializedConfig = JSON.stringify(config);\n  const sharedConnector = sharedConnectors.get(serializedConfig);\n  return sharedConnector != null ? sharedConnector : createConnector(version, config);\n}\n\n// src/wallets/walletConnectors/metaMaskWallet/metaMaskWallet.ts\nfunction isMetaMask(ethereum) {\n  if (!(ethereum == null ? void 0 : ethereum.isMetaMask)) return false;\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return false;\n  if (ethereum.isApexWallet) return false;\n  if (ethereum.isAvalanche) return false;\n  if (ethereum.isBackpack) return false;\n  if (ethereum.isBifrost) return false;\n  if (ethereum.isBitKeep) return false;\n  if (ethereum.isBitski) return false;\n  if (ethereum.isBlockWallet) return false;\n  if (ethereum.isCoinbaseWallet) return false;\n  if (ethereum.isDawn) return false;\n  if (ethereum.isEnkrypt) return false;\n  if (ethereum.isExodus) return false;\n  if (ethereum.isFrame) return false;\n  if (ethereum.isFrontier) return false;\n  if (ethereum.isGamestop) return false;\n  if (ethereum.isHyperPay) return false;\n  if (ethereum.isImToken) return false;\n  if (ethereum.isKuCoinWallet) return false;\n  if (ethereum.isMathWallet) return false;\n  if (ethereum.isOkxWallet || ethereum.isOKExWallet) return false;\n  if (ethereum.isOneInchIOSWallet || ethereum.isOneInchAndroidWallet) return false;\n  if (ethereum.isOpera) return false;\n  if (ethereum.isPhantom) return false;\n  if (ethereum.isPortal) return false;\n  if (ethereum.isRabby) return false;\n  if (ethereum.isRainbow) return false;\n  if (ethereum.isStatus) return false;\n  if (ethereum.isTalisman) return false;\n  if (ethereum.isTally) return false;\n  if (ethereum.isTokenPocket) return false;\n  if (ethereum.isTokenary) return false;\n  if (ethereum.isTrust || ethereum.isTrustWallet) return false;\n  if (ethereum.isXDEFI) return false;\n  if (ethereum.isZerion) return false;\n  return true;\n}\nvar metaMaskWallet = ({\n  chains,\n  projectId,\n  walletConnectOptions,\n  walletConnectVersion = \"2\",\n  ...options\n}) => {\n  var _a, _b;\n  const providers = typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.providers);\n  const isMetaMaskInjected = typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\" && (((_b = window.ethereum.providers) == null ? void 0 : _b.some(isMetaMask)) || window.ethereum.isMetaMask);\n  const shouldUseWalletConnect = !isMetaMaskInjected;\n  return {\n    id: \"metaMask\",\n    name: \"MetaMask\",\n    iconUrl: async () => (await import(\"./metaMaskWallet-ORHUNQRP.js\")).default,\n    iconAccent: \"#f6851a\",\n    iconBackground: \"#fff\",\n    installed: !shouldUseWalletConnect ? isMetaMaskInjected : void 0,\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=io.metamask\",\n      ios: \"https://apps.apple.com/us/app/metamask/id1438144202\",\n      mobile: \"https://metamask.io/download\",\n      qrCode: \"https://metamask.io/download\",\n      chrome: \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\",\n      edge: \"https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm\",\n      firefox: \"https://addons.mozilla.org/firefox/addon/ether-metamask\",\n      opera: \"https://addons.opera.com/extensions/details/metamask-10\",\n      browserExtension: \"https://metamask.io/download\"\n    },\n    createConnector: () => {\n      const connector = shouldUseWalletConnect ? getWalletConnectConnector({\n        projectId,\n        chains,\n        version: walletConnectVersion,\n        options: walletConnectOptions\n      }) : new MetaMaskConnector({\n        chains,\n        options: {\n          getProvider: () => providers ? providers.find(isMetaMask) : typeof window !== \"undefined\" ? window.ethereum : void 0,\n          ...options\n        }\n      });\n      const getUri = async () => {\n        const uri = await getWalletConnectUri(connector, walletConnectVersion);\n        return isAndroid() ? uri : isIOS() ? `metamask://wc?uri=${encodeURIComponent(uri)}` : `https://metamask.app.link/wc?uri=${encodeURIComponent(uri)}`;\n      };\n      return {\n        connector,\n        mobile: {\n          getUri: shouldUseWalletConnect ? getUri : void 0\n        },\n        qrCode: shouldUseWalletConnect ? {\n          getUri,\n          instructions: {\n            learnMoreUrl: \"https://metamask.io/faqs/\",\n            steps: [{\n              description: \"We recommend putting MetaMask on your home screen for quicker access.\",\n              step: \"install\",\n              title: \"Open the MetaMask app\"\n            }, {\n              description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the scan button\"\n            }]\n          }\n        } : void 0,\n        extension: {\n          instructions: {\n            learnMoreUrl: \"https://metamask.io/faqs/\",\n            steps: [{\n              description: \"We recommend pinning MetaMask to your taskbar for quicker access to your wallet.\",\n              step: \"install\",\n              title: \"Install the MetaMask extension\"\n            }, {\n              description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\n              step: \"refresh\",\n              title: \"Refresh your browser\"\n            }]\n          }\n        }\n      };\n    }\n  };\n};\n\n// src/wallets/getInjectedConnector.ts\nimport { InjectedConnector as InjectedConnector3 } from \"wagmi/connectors/injected\";\nfunction getExplicitInjectedProvider(flag) {\n  if (typeof window === \"undefined\" || typeof window.ethereum === \"undefined\") return;\n  const providers = window.ethereum.providers;\n  return providers ? providers.find(provider => provider[flag]) : window.ethereum[flag] ? window.ethereum : void 0;\n}\nfunction hasInjectedProvider(flag) {\n  return Boolean(getExplicitInjectedProvider(flag));\n}\nfunction getInjectedProvider(flag) {\n  if (typeof window === \"undefined\" || typeof window.ethereum === \"undefined\") return;\n  const providers = window.ethereum.providers;\n  const provider = getExplicitInjectedProvider(flag);\n  if (provider) return provider;else if (typeof providers !== \"undefined\" && providers.length > 0) return providers[0];else return window.ethereum;\n}\nfunction getInjectedConnector({\n  chains,\n  flag,\n  options\n}) {\n  return new InjectedConnector3({\n    chains,\n    options: {\n      getProvider: () => getInjectedProvider(flag),\n      ...options\n    }\n  });\n}\n\n// src/wallets/walletConnectors/rainbowWallet/rainbowWallet.ts\nvar rainbowWallet = ({\n  chains,\n  projectId,\n  walletConnectOptions,\n  walletConnectVersion = \"2\",\n  ...options\n}) => {\n  const isRainbowInjected = hasInjectedProvider(\"isRainbow\");\n  const shouldUseWalletConnect = !isRainbowInjected;\n  return {\n    id: \"rainbow\",\n    name: \"Rainbow\",\n    iconUrl: async () => (await import(\"./rainbowWallet-GGU64QEI.js\")).default,\n    iconBackground: \"#0c2f78\",\n    installed: !shouldUseWalletConnect ? isRainbowInjected : void 0,\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=me.rainbow&referrer=utm_source%3Drainbowkit&utm_source=rainbowkit\",\n      ios: \"https://apps.apple.com/app/apple-store/id1457119021?pt=119997837&ct=rainbowkit&mt=8\",\n      mobile: \"https://rainbow.download?utm_source=rainbowkit\",\n      qrCode: \"https://rainbow.download?utm_source=rainbowkit&utm_medium=qrcode\",\n      browserExtension: \"https://rainbow.me/extension?utm_source=rainbowkit\"\n    },\n    createConnector: () => {\n      const connector = shouldUseWalletConnect ? getWalletConnectConnector({\n        projectId,\n        chains,\n        version: walletConnectVersion,\n        options: walletConnectOptions\n      }) : getInjectedConnector({\n        flag: \"isRainbow\",\n        chains,\n        options\n      });\n      const getUri = async () => {\n        const uri = await getWalletConnectUri(connector, walletConnectVersion);\n        return isAndroid() ? uri : isIOS() ? `rainbow://wc?uri=${encodeURIComponent(uri)}&connector=rainbowkit` : `https://rnbwapp.com/wc?uri=${encodeURIComponent(uri)}&connector=rainbowkit`;\n      };\n      return {\n        connector,\n        mobile: {\n          getUri: shouldUseWalletConnect ? getUri : void 0\n        },\n        qrCode: shouldUseWalletConnect ? {\n          getUri,\n          instructions: {\n            learnMoreUrl: \"https://learn.rainbow.me/connect-to-a-website-or-app?utm_source=rainbowkit&utm_medium=connector&utm_campaign=learnmore\",\n            steps: [{\n              description: \"We recommend putting Rainbow on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Rainbow app\"\n            }, {\n              description: \"You can easily backup your wallet using our backup feature on your phone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the scan button\"\n            }]\n          }\n        } : void 0\n      };\n    }\n  };\n};\n\n// src/wallets/walletConnectors/safeWallet/safeWallet.ts\nimport { SafeConnector } from \"wagmi/connectors/safe\";\nvar safeWallet = ({\n  chains,\n  ...options\n}) => ({\n  id: \"safe\",\n  name: \"Safe\",\n  iconAccent: \"#12ff80\",\n  iconBackground: \"#fff\",\n  iconUrl: async () => (await import(\"./safeWallet-DFMLSLCR.js\")).default,\n  installed: !(typeof window === \"undefined\") && (window == null ? void 0 : window.parent) !== window,\n  downloadUrls: {},\n  createConnector: () => ({\n    connector: new SafeConnector({\n      chains,\n      options\n    })\n  })\n});\n\n// src/wallets/walletConnectors/walletConnectWallet/walletConnectWallet.ts\nvar walletConnectWallet = ({\n  chains,\n  options,\n  projectId,\n  version = \"2\"\n}) => ({\n  id: \"walletConnect\",\n  name: \"WalletConnect\",\n  iconUrl: async () => (await import(\"./walletConnectWallet-D6ZADJM7.js\")).default,\n  iconBackground: \"#3b99fc\",\n  createConnector: () => {\n    const ios = isIOS();\n    const connector = version === \"1\" ? getWalletConnectConnector({\n      version: \"1\",\n      chains,\n      options: {\n        qrcode: ios,\n        ...options\n      }\n    }) : getWalletConnectConnector({\n      version: \"2\",\n      chains,\n      projectId,\n      options: {\n        showQrModal: ios,\n        ...options\n      }\n    });\n    const getUri = async () => getWalletConnectUri(connector, version);\n    return {\n      connector,\n      ...(ios ? {} : {\n        mobile: {\n          getUri\n        },\n        qrCode: {\n          getUri\n        }\n      })\n    };\n  }\n});\n\n// src/wallets/getDefaultWallets.ts\nvar getDefaultWallets = ({\n  appName,\n  chains,\n  projectId\n}) => {\n  const wallets = [{\n    groupName: \"Popular\",\n    wallets: [injectedWallet({\n      chains\n    }), safeWallet({\n      chains\n    }), rainbowWallet({\n      chains,\n      projectId\n    }), coinbaseWallet({\n      appName,\n      chains\n    }), metaMaskWallet({\n      chains,\n      projectId\n    }), walletConnectWallet({\n      chains,\n      projectId\n    }), braveWallet({\n      chains\n    })]\n  }];\n  return {\n    connectors: connectorsForWallets(wallets),\n    wallets\n  };\n};\n\n// src/transactions/useAddRecentTransaction.ts\nimport { useCallback } from \"react\";\nimport { useAccount } from \"wagmi\";\nfunction useAddRecentTransaction() {\n  const store = useTransactionStore();\n  const {\n    address\n  } = useAccount();\n  const chainId = useChainId();\n  return useCallback(transaction => {\n    if (!address || !chainId) {\n      throw new Error(\"No address or chain ID found\");\n    }\n    store.addTransaction(address, chainId, transaction);\n  }, [store, address, chainId]);\n}\n\n// src/__private__/index.ts\nvar __private__ = {\n  DesktopOptions,\n  dialogContent,\n  dialogContentMobile,\n  MobileOptions\n};\nexport { ConnectButton, RainbowKitAuthenticationProvider, RainbowKitProvider, __private__, connectorsForWallets, createAuthenticationAdapter, cssObjectFromTheme, cssStringFromTheme, darkTheme, getDefaultWallets, getWalletConnectConnector, lightTheme, midnightTheme, useAccountModal, useAddRecentTransaction, useChainModal, useConnectModal };","map":{"version":3,"names":["midnightTheme","darkTheme","ConnectButton","DesktopOptions","MobileOptions","RainbowKitAuthenticationProvider","RainbowKitProvider","createAuthenticationAdapter","cssObjectFromTheme","cssStringFromTheme","dialogContent","dialogContentMobile","isAndroid","isHexString","isIOS","isMobile","useAccountModal","useChainId","useChainModal","useConnectModal","useTransactionStore","lightTheme","WalletConnectConnector","omitUndefinedValues","obj","Object","fromEntries","entries","filter","_key","value","connectorsForWallets","walletList","index","connectors","visibleWallets","potentiallyHiddenWallets","walletInstances","forEach","groupName","wallets","groupIndex","wallet","iconAccent","Error","name","walletListItem","hidden","push","walletListItems","createConnector","createConnector2","index2","walletMeta","isHidden","map","connector","connector2","id","installed","connectionMethods","walletConnectModalConnector","qrCode","chains","options","showQrModal","walletInstance","includes","_wallets","InjectedConnector","braveWallet","_a","iconUrl","default","iconBackground","window","ethereum","isBraveWallet","downloadUrls","CoinbaseWalletConnector","coinbaseWallet","appName","isCoinbaseWalletInjected","isCoinbaseWallet","shortName","android","ios","mobile","chrome","browserExtension","headlessMode","getUri","getProvider","qrUrl","instructions","learnMoreUrl","steps","description","step","title","extension","InjectedConnector2","injectedWallet","some","MetaMaskConnector","getWalletConnectUri","version","provider","Promise","resolve","once","uri","WalletConnectConnector2","WalletConnectLegacyConnector","sharedConnectors","Map","config","set","JSON","stringify","getWalletConnectConnector","projectId","exampleProjectId","console","warn","qrcode","serializedConfig","sharedConnector","get","isMetaMask","_events","_state","isApexWallet","isAvalanche","isBackpack","isBifrost","isBitKeep","isBitski","isBlockWallet","isDawn","isEnkrypt","isExodus","isFrame","isFrontier","isGamestop","isHyperPay","isImToken","isKuCoinWallet","isMathWallet","isOkxWallet","isOKExWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPhantom","isPortal","isRabby","isRainbow","isStatus","isTalisman","isTally","isTokenPocket","isTokenary","isTrust","isTrustWallet","isXDEFI","isZerion","metaMaskWallet","walletConnectOptions","walletConnectVersion","_b","providers","isMetaMaskInjected","shouldUseWalletConnect","edge","firefox","opera","find","encodeURIComponent","InjectedConnector3","getExplicitInjectedProvider","flag","hasInjectedProvider","Boolean","getInjectedProvider","length","getInjectedConnector","rainbowWallet","isRainbowInjected","SafeConnector","safeWallet","parent","walletConnectWallet","getDefaultWallets","useCallback","useAccount","useAddRecentTransaction","store","address","chainId","transaction","addTransaction","__private__"],"sources":["C:/Users/hp/OneDrive/Desktop/Artica/artica-repo/frontend/node_modules/@rainbow-me/rainbowkit/dist/index.js"],"sourcesContent":["\"use client\";\r\nimport {\r\n  midnightTheme\r\n} from \"./chunk-WP6TGA7H.js\";\r\nimport {\r\n  darkTheme\r\n} from \"./chunk-BSMW2B2K.js\";\r\nimport {\r\n  ConnectButton,\r\n  DesktopOptions,\r\n  MobileOptions,\r\n  RainbowKitAuthenticationProvider,\r\n  RainbowKitProvider,\r\n  createAuthenticationAdapter,\r\n  cssObjectFromTheme,\r\n  cssStringFromTheme,\r\n  dialogContent,\r\n  dialogContentMobile,\r\n  isAndroid,\r\n  isHexString,\r\n  isIOS,\r\n  isMobile,\r\n  useAccountModal,\r\n  useChainId,\r\n  useChainModal,\r\n  useConnectModal,\r\n  useTransactionStore\r\n} from \"./chunk-LAWPQJXA.js\";\r\nimport {\r\n  lightTheme\r\n} from \"./chunk-Q4HVINFA.js\";\r\nimport \"./chunk-SWKUKXRF.js\";\r\n\r\n// src/wallets/connectorsForWallets.ts\r\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\r\n\r\n// src/utils/omitUndefinedValues.ts\r\nfunction omitUndefinedValues(obj) {\r\n  return Object.fromEntries(Object.entries(obj).filter(([_key, value]) => value !== void 0));\r\n}\r\n\r\n// src/wallets/connectorsForWallets.ts\r\nvar connectorsForWallets = (walletList) => {\r\n  return () => {\r\n    let index = -1;\r\n    const connectors = [];\r\n    const visibleWallets = [];\r\n    const potentiallyHiddenWallets = [];\r\n    const walletInstances = [];\r\n    walletList.forEach(({ groupName, wallets }, groupIndex) => {\r\n      wallets.forEach((wallet) => {\r\n        index++;\r\n        if ((wallet == null ? void 0 : wallet.iconAccent) && !isHexString(wallet == null ? void 0 : wallet.iconAccent)) {\r\n          throw new Error(`Property \\`iconAccent\\` is not a hex value for wallet: ${wallet.name}`);\r\n        }\r\n        const walletListItem = {\r\n          ...wallet,\r\n          groupIndex,\r\n          groupName,\r\n          index\r\n        };\r\n        if (typeof wallet.hidden === \"function\") {\r\n          potentiallyHiddenWallets.push(walletListItem);\r\n        } else {\r\n          visibleWallets.push(walletListItem);\r\n        }\r\n      });\r\n    });\r\n    const walletListItems = [\r\n      ...visibleWallets,\r\n      ...potentiallyHiddenWallets\r\n    ];\r\n    walletListItems.forEach(({\r\n      createConnector: createConnector2,\r\n      groupIndex,\r\n      groupName,\r\n      hidden,\r\n      index: index2,\r\n      ...walletMeta\r\n    }) => {\r\n      if (typeof hidden === \"function\") {\r\n        const isHidden = hidden({\r\n          wallets: [\r\n            ...walletInstances.map(({ connector: connector2, id, installed, name }) => ({\r\n              connector: connector2,\r\n              id,\r\n              installed,\r\n              name\r\n            }))\r\n          ]\r\n        });\r\n        if (isHidden) {\r\n          return;\r\n        }\r\n      }\r\n      const { connector, ...connectionMethods } = omitUndefinedValues(createConnector2());\r\n      let walletConnectModalConnector;\r\n      if (walletMeta.id === \"walletConnect\" && connectionMethods.qrCode && !isMobile()) {\r\n        const { chains, options } = connector;\r\n        walletConnectModalConnector = new WalletConnectConnector({\r\n          chains,\r\n          options: {\r\n            ...options,\r\n            showQrModal: true\r\n          }\r\n        });\r\n        connectors.push(walletConnectModalConnector);\r\n      }\r\n      const walletInstance = {\r\n        connector,\r\n        groupIndex,\r\n        groupName,\r\n        index: index2,\r\n        walletConnectModalConnector,\r\n        ...walletMeta,\r\n        ...connectionMethods\r\n      };\r\n      walletInstances.push(walletInstance);\r\n      if (!connectors.includes(connector)) {\r\n        connectors.push(connector);\r\n        connector._wallets = [];\r\n      }\r\n      connector._wallets.push(walletInstance);\r\n    });\r\n    return connectors;\r\n  };\r\n};\r\n\r\n// src/wallets/walletConnectors/braveWallet/braveWallet.ts\r\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\r\nvar braveWallet = ({\r\n  chains,\r\n  ...options\r\n}) => {\r\n  var _a;\r\n  return {\r\n    id: \"brave\",\r\n    name: \"Brave Wallet\",\r\n    iconUrl: async () => (await import(\"./braveWallet-BTBH4MDN.js\")).default,\r\n    iconBackground: \"#fff\",\r\n    installed: typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isBraveWallet) === true,\r\n    downloadUrls: {},\r\n    createConnector: () => ({\r\n      connector: new InjectedConnector({\r\n        chains,\r\n        options\r\n      })\r\n    })\r\n  };\r\n};\r\n\r\n// src/wallets/walletConnectors/coinbaseWallet/coinbaseWallet.ts\r\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\r\nvar coinbaseWallet = ({\r\n  appName,\r\n  chains,\r\n  ...options\r\n}) => {\r\n  var _a;\r\n  const isCoinbaseWalletInjected = typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isCoinbaseWallet) === true;\r\n  return {\r\n    id: \"coinbase\",\r\n    name: \"Coinbase Wallet\",\r\n    shortName: \"Coinbase\",\r\n    iconUrl: async () => (await import(\"./coinbaseWallet-2OUR5TUP.js\")).default,\r\n    iconAccent: \"#2c5ff6\",\r\n    iconBackground: \"#2c5ff6\",\r\n    installed: isCoinbaseWalletInjected || void 0,\r\n    downloadUrls: {\r\n      android: \"https://play.google.com/store/apps/details?id=org.toshi\",\r\n      ios: \"https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455\",\r\n      mobile: \"https://coinbase.com/wallet/downloads\",\r\n      qrCode: \"https://coinbase-wallet.onelink.me/q5Sx/fdb9b250\",\r\n      chrome: \"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad\",\r\n      browserExtension: \"https://coinbase.com/wallet\"\r\n    },\r\n    createConnector: () => {\r\n      const ios = isIOS();\r\n      const connector = new CoinbaseWalletConnector({\r\n        chains,\r\n        options: {\r\n          appName,\r\n          headlessMode: true,\r\n          ...options\r\n        }\r\n      });\r\n      const getUri = async () => (await connector.getProvider()).qrUrl;\r\n      return {\r\n        connector,\r\n        ...ios ? {} : {\r\n          qrCode: {\r\n            getUri,\r\n            instructions: {\r\n              learnMoreUrl: \"https://coinbase.com/wallet/articles/getting-started-mobile\",\r\n              steps: [\r\n                {\r\n                  description: \"We recommend putting Coinbase Wallet on your home screen for quicker access.\",\r\n                  step: \"install\",\r\n                  title: \"Open the Coinbase Wallet app\"\r\n                },\r\n                {\r\n                  description: \"You can easily backup your wallet using the cloud backup feature.\",\r\n                  step: \"create\",\r\n                  title: \"Create or Import a Wallet\"\r\n                },\r\n                {\r\n                  description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\r\n                  step: \"scan\",\r\n                  title: \"Tap the scan button\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          extension: {\r\n            instructions: {\r\n              learnMoreUrl: \"https://coinbase.com/wallet/articles/getting-started-extension\",\r\n              steps: [\r\n                {\r\n                  description: \"We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.\",\r\n                  step: \"install\",\r\n                  title: \"Install the Coinbase Wallet extension\"\r\n                },\r\n                {\r\n                  description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\r\n                  step: \"create\",\r\n                  title: \"Create or Import a Wallet\"\r\n                },\r\n                {\r\n                  description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\r\n                  step: \"refresh\",\r\n                  title: \"Refresh your browser\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n// src/wallets/walletConnectors/injectedWallet/injectedWallet.ts\r\nimport { InjectedConnector as InjectedConnector2 } from \"wagmi/connectors/injected\";\r\nvar injectedWallet = ({\r\n  chains,\r\n  ...options\r\n}) => ({\r\n  id: \"injected\",\r\n  name: \"Browser Wallet\",\r\n  iconUrl: async () => (await import(\"./injectedWallet-EUKDEAIU.js\")).default,\r\n  iconBackground: \"#fff\",\r\n  hidden: ({ wallets }) => wallets.some((wallet) => wallet.installed && wallet.name === wallet.connector.name && (wallet.connector instanceof InjectedConnector2 || wallet.id === \"coinbase\")),\r\n  createConnector: () => ({\r\n    connector: new InjectedConnector2({\r\n      chains,\r\n      options\r\n    })\r\n  })\r\n});\r\n\r\n// src/wallets/walletConnectors/metaMaskWallet/metaMaskWallet.ts\r\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\r\n\r\n// src/utils/getWalletConnectUri.ts\r\nasync function getWalletConnectUri(connector, version) {\r\n  const provider = await connector.getProvider();\r\n  return version === \"2\" ? new Promise((resolve) => provider.once(\"display_uri\", resolve)) : provider.connector.uri;\r\n}\r\n\r\n// src/wallets/getWalletConnectConnector.ts\r\nimport { WalletConnectConnector as WalletConnectConnector2 } from \"wagmi/connectors/walletConnect\";\r\nimport { WalletConnectLegacyConnector } from \"wagmi/connectors/walletConnectLegacy\";\r\nvar sharedConnectors = /* @__PURE__ */ new Map();\r\nfunction createConnector(version, config) {\r\n  const connector = version === \"1\" ? new WalletConnectLegacyConnector(config) : new WalletConnectConnector2(config);\r\n  sharedConnectors.set(JSON.stringify(config), connector);\r\n  return connector;\r\n}\r\nfunction getWalletConnectConnector({\r\n  chains,\r\n  options = {},\r\n  projectId,\r\n  version = \"2\"\r\n}) {\r\n  const exampleProjectId = \"21fef48091f12692cad574a6f7753643\";\r\n  if (version === \"2\") {\r\n    if (!projectId || projectId === \"\")\r\n      throw new Error(\"No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure\");\r\n    else if (projectId === \"YOUR_PROJECT_ID\" || projectId === exampleProjectId)\r\n      console.warn(\"Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure\");\r\n  }\r\n  const config = {\r\n    chains,\r\n    options: version === \"1\" ? {\r\n      qrcode: false,\r\n      ...options\r\n    } : {\r\n      projectId: projectId === \"YOUR_PROJECT_ID\" ? exampleProjectId : projectId,\r\n      showQrModal: false,\r\n      ...options\r\n    }\r\n  };\r\n  const serializedConfig = JSON.stringify(config);\r\n  const sharedConnector = sharedConnectors.get(serializedConfig);\r\n  return sharedConnector != null ? sharedConnector : createConnector(version, config);\r\n}\r\n\r\n// src/wallets/walletConnectors/metaMaskWallet/metaMaskWallet.ts\r\nfunction isMetaMask(ethereum) {\r\n  if (!(ethereum == null ? void 0 : ethereum.isMetaMask))\r\n    return false;\r\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state)\r\n    return false;\r\n  if (ethereum.isApexWallet)\r\n    return false;\r\n  if (ethereum.isAvalanche)\r\n    return false;\r\n  if (ethereum.isBackpack)\r\n    return false;\r\n  if (ethereum.isBifrost)\r\n    return false;\r\n  if (ethereum.isBitKeep)\r\n    return false;\r\n  if (ethereum.isBitski)\r\n    return false;\r\n  if (ethereum.isBlockWallet)\r\n    return false;\r\n  if (ethereum.isCoinbaseWallet)\r\n    return false;\r\n  if (ethereum.isDawn)\r\n    return false;\r\n  if (ethereum.isEnkrypt)\r\n    return false;\r\n  if (ethereum.isExodus)\r\n    return false;\r\n  if (ethereum.isFrame)\r\n    return false;\r\n  if (ethereum.isFrontier)\r\n    return false;\r\n  if (ethereum.isGamestop)\r\n    return false;\r\n  if (ethereum.isHyperPay)\r\n    return false;\r\n  if (ethereum.isImToken)\r\n    return false;\r\n  if (ethereum.isKuCoinWallet)\r\n    return false;\r\n  if (ethereum.isMathWallet)\r\n    return false;\r\n  if (ethereum.isOkxWallet || ethereum.isOKExWallet)\r\n    return false;\r\n  if (ethereum.isOneInchIOSWallet || ethereum.isOneInchAndroidWallet)\r\n    return false;\r\n  if (ethereum.isOpera)\r\n    return false;\r\n  if (ethereum.isPhantom)\r\n    return false;\r\n  if (ethereum.isPortal)\r\n    return false;\r\n  if (ethereum.isRabby)\r\n    return false;\r\n  if (ethereum.isRainbow)\r\n    return false;\r\n  if (ethereum.isStatus)\r\n    return false;\r\n  if (ethereum.isTalisman)\r\n    return false;\r\n  if (ethereum.isTally)\r\n    return false;\r\n  if (ethereum.isTokenPocket)\r\n    return false;\r\n  if (ethereum.isTokenary)\r\n    return false;\r\n  if (ethereum.isTrust || ethereum.isTrustWallet)\r\n    return false;\r\n  if (ethereum.isXDEFI)\r\n    return false;\r\n  if (ethereum.isZerion)\r\n    return false;\r\n  return true;\r\n}\r\nvar metaMaskWallet = ({\r\n  chains,\r\n  projectId,\r\n  walletConnectOptions,\r\n  walletConnectVersion = \"2\",\r\n  ...options\r\n}) => {\r\n  var _a, _b;\r\n  const providers = typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.providers);\r\n  const isMetaMaskInjected = typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\" && (((_b = window.ethereum.providers) == null ? void 0 : _b.some(isMetaMask)) || window.ethereum.isMetaMask);\r\n  const shouldUseWalletConnect = !isMetaMaskInjected;\r\n  return {\r\n    id: \"metaMask\",\r\n    name: \"MetaMask\",\r\n    iconUrl: async () => (await import(\"./metaMaskWallet-ORHUNQRP.js\")).default,\r\n    iconAccent: \"#f6851a\",\r\n    iconBackground: \"#fff\",\r\n    installed: !shouldUseWalletConnect ? isMetaMaskInjected : void 0,\r\n    downloadUrls: {\r\n      android: \"https://play.google.com/store/apps/details?id=io.metamask\",\r\n      ios: \"https://apps.apple.com/us/app/metamask/id1438144202\",\r\n      mobile: \"https://metamask.io/download\",\r\n      qrCode: \"https://metamask.io/download\",\r\n      chrome: \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn\",\r\n      edge: \"https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm\",\r\n      firefox: \"https://addons.mozilla.org/firefox/addon/ether-metamask\",\r\n      opera: \"https://addons.opera.com/extensions/details/metamask-10\",\r\n      browserExtension: \"https://metamask.io/download\"\r\n    },\r\n    createConnector: () => {\r\n      const connector = shouldUseWalletConnect ? getWalletConnectConnector({\r\n        projectId,\r\n        chains,\r\n        version: walletConnectVersion,\r\n        options: walletConnectOptions\r\n      }) : new MetaMaskConnector({\r\n        chains,\r\n        options: {\r\n          getProvider: () => providers ? providers.find(isMetaMask) : typeof window !== \"undefined\" ? window.ethereum : void 0,\r\n          ...options\r\n        }\r\n      });\r\n      const getUri = async () => {\r\n        const uri = await getWalletConnectUri(connector, walletConnectVersion);\r\n        return isAndroid() ? uri : isIOS() ? `metamask://wc?uri=${encodeURIComponent(uri)}` : `https://metamask.app.link/wc?uri=${encodeURIComponent(uri)}`;\r\n      };\r\n      return {\r\n        connector,\r\n        mobile: {\r\n          getUri: shouldUseWalletConnect ? getUri : void 0\r\n        },\r\n        qrCode: shouldUseWalletConnect ? {\r\n          getUri,\r\n          instructions: {\r\n            learnMoreUrl: \"https://metamask.io/faqs/\",\r\n            steps: [\r\n              {\r\n                description: \"We recommend putting MetaMask on your home screen for quicker access.\",\r\n                step: \"install\",\r\n                title: \"Open the MetaMask app\"\r\n              },\r\n              {\r\n                description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\r\n                step: \"create\",\r\n                title: \"Create or Import a Wallet\"\r\n              },\r\n              {\r\n                description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\r\n                step: \"scan\",\r\n                title: \"Tap the scan button\"\r\n              }\r\n            ]\r\n          }\r\n        } : void 0,\r\n        extension: {\r\n          instructions: {\r\n            learnMoreUrl: \"https://metamask.io/faqs/\",\r\n            steps: [\r\n              {\r\n                description: \"We recommend pinning MetaMask to your taskbar for quicker access to your wallet.\",\r\n                step: \"install\",\r\n                title: \"Install the MetaMask extension\"\r\n              },\r\n              {\r\n                description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\r\n                step: \"create\",\r\n                title: \"Create or Import a Wallet\"\r\n              },\r\n              {\r\n                description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\r\n                step: \"refresh\",\r\n                title: \"Refresh your browser\"\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n// src/wallets/getInjectedConnector.ts\r\nimport { InjectedConnector as InjectedConnector3 } from \"wagmi/connectors/injected\";\r\nfunction getExplicitInjectedProvider(flag) {\r\n  if (typeof window === \"undefined\" || typeof window.ethereum === \"undefined\")\r\n    return;\r\n  const providers = window.ethereum.providers;\r\n  return providers ? providers.find((provider) => provider[flag]) : window.ethereum[flag] ? window.ethereum : void 0;\r\n}\r\nfunction hasInjectedProvider(flag) {\r\n  return Boolean(getExplicitInjectedProvider(flag));\r\n}\r\nfunction getInjectedProvider(flag) {\r\n  if (typeof window === \"undefined\" || typeof window.ethereum === \"undefined\")\r\n    return;\r\n  const providers = window.ethereum.providers;\r\n  const provider = getExplicitInjectedProvider(flag);\r\n  if (provider)\r\n    return provider;\r\n  else if (typeof providers !== \"undefined\" && providers.length > 0)\r\n    return providers[0];\r\n  else\r\n    return window.ethereum;\r\n}\r\nfunction getInjectedConnector({\r\n  chains,\r\n  flag,\r\n  options\r\n}) {\r\n  return new InjectedConnector3({\r\n    chains,\r\n    options: {\r\n      getProvider: () => getInjectedProvider(flag),\r\n      ...options\r\n    }\r\n  });\r\n}\r\n\r\n// src/wallets/walletConnectors/rainbowWallet/rainbowWallet.ts\r\nvar rainbowWallet = ({\r\n  chains,\r\n  projectId,\r\n  walletConnectOptions,\r\n  walletConnectVersion = \"2\",\r\n  ...options\r\n}) => {\r\n  const isRainbowInjected = hasInjectedProvider(\"isRainbow\");\r\n  const shouldUseWalletConnect = !isRainbowInjected;\r\n  return {\r\n    id: \"rainbow\",\r\n    name: \"Rainbow\",\r\n    iconUrl: async () => (await import(\"./rainbowWallet-GGU64QEI.js\")).default,\r\n    iconBackground: \"#0c2f78\",\r\n    installed: !shouldUseWalletConnect ? isRainbowInjected : void 0,\r\n    downloadUrls: {\r\n      android: \"https://play.google.com/store/apps/details?id=me.rainbow&referrer=utm_source%3Drainbowkit&utm_source=rainbowkit\",\r\n      ios: \"https://apps.apple.com/app/apple-store/id1457119021?pt=119997837&ct=rainbowkit&mt=8\",\r\n      mobile: \"https://rainbow.download?utm_source=rainbowkit\",\r\n      qrCode: \"https://rainbow.download?utm_source=rainbowkit&utm_medium=qrcode\",\r\n      browserExtension: \"https://rainbow.me/extension?utm_source=rainbowkit\"\r\n    },\r\n    createConnector: () => {\r\n      const connector = shouldUseWalletConnect ? getWalletConnectConnector({\r\n        projectId,\r\n        chains,\r\n        version: walletConnectVersion,\r\n        options: walletConnectOptions\r\n      }) : getInjectedConnector({ flag: \"isRainbow\", chains, options });\r\n      const getUri = async () => {\r\n        const uri = await getWalletConnectUri(connector, walletConnectVersion);\r\n        return isAndroid() ? uri : isIOS() ? `rainbow://wc?uri=${encodeURIComponent(uri)}&connector=rainbowkit` : `https://rnbwapp.com/wc?uri=${encodeURIComponent(uri)}&connector=rainbowkit`;\r\n      };\r\n      return {\r\n        connector,\r\n        mobile: { getUri: shouldUseWalletConnect ? getUri : void 0 },\r\n        qrCode: shouldUseWalletConnect ? {\r\n          getUri,\r\n          instructions: {\r\n            learnMoreUrl: \"https://learn.rainbow.me/connect-to-a-website-or-app?utm_source=rainbowkit&utm_medium=connector&utm_campaign=learnmore\",\r\n            steps: [\r\n              {\r\n                description: \"We recommend putting Rainbow on your home screen for faster access to your wallet.\",\r\n                step: \"install\",\r\n                title: \"Open the Rainbow app\"\r\n              },\r\n              {\r\n                description: \"You can easily backup your wallet using our backup feature on your phone.\",\r\n                step: \"create\",\r\n                title: \"Create or Import a Wallet\"\r\n              },\r\n              {\r\n                description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\r\n                step: \"scan\",\r\n                title: \"Tap the scan button\"\r\n              }\r\n            ]\r\n          }\r\n        } : void 0\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n// src/wallets/walletConnectors/safeWallet/safeWallet.ts\r\nimport { SafeConnector } from \"wagmi/connectors/safe\";\r\nvar safeWallet = ({\r\n  chains,\r\n  ...options\r\n}) => ({\r\n  id: \"safe\",\r\n  name: \"Safe\",\r\n  iconAccent: \"#12ff80\",\r\n  iconBackground: \"#fff\",\r\n  iconUrl: async () => (await import(\"./safeWallet-DFMLSLCR.js\")).default,\r\n  installed: !(typeof window === \"undefined\") && (window == null ? void 0 : window.parent) !== window,\r\n  downloadUrls: {},\r\n  createConnector: () => ({\r\n    connector: new SafeConnector({ chains, options })\r\n  })\r\n});\r\n\r\n// src/wallets/walletConnectors/walletConnectWallet/walletConnectWallet.ts\r\nvar walletConnectWallet = ({\r\n  chains,\r\n  options,\r\n  projectId,\r\n  version = \"2\"\r\n}) => ({\r\n  id: \"walletConnect\",\r\n  name: \"WalletConnect\",\r\n  iconUrl: async () => (await import(\"./walletConnectWallet-D6ZADJM7.js\")).default,\r\n  iconBackground: \"#3b99fc\",\r\n  createConnector: () => {\r\n    const ios = isIOS();\r\n    const connector = version === \"1\" ? getWalletConnectConnector({\r\n      version: \"1\",\r\n      chains,\r\n      options: {\r\n        qrcode: ios,\r\n        ...options\r\n      }\r\n    }) : getWalletConnectConnector({\r\n      version: \"2\",\r\n      chains,\r\n      projectId,\r\n      options: {\r\n        showQrModal: ios,\r\n        ...options\r\n      }\r\n    });\r\n    const getUri = async () => getWalletConnectUri(connector, version);\r\n    return {\r\n      connector,\r\n      ...ios ? {} : {\r\n        mobile: { getUri },\r\n        qrCode: { getUri }\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\n// src/wallets/getDefaultWallets.ts\r\nvar getDefaultWallets = ({\r\n  appName,\r\n  chains,\r\n  projectId\r\n}) => {\r\n  const wallets = [\r\n    {\r\n      groupName: \"Popular\",\r\n      wallets: [\r\n        injectedWallet({ chains }),\r\n        safeWallet({ chains }),\r\n        rainbowWallet({ chains, projectId }),\r\n        coinbaseWallet({ appName, chains }),\r\n        metaMaskWallet({ chains, projectId }),\r\n        walletConnectWallet({ chains, projectId }),\r\n        braveWallet({ chains })\r\n      ]\r\n    }\r\n  ];\r\n  return {\r\n    connectors: connectorsForWallets(wallets),\r\n    wallets\r\n  };\r\n};\r\n\r\n// src/transactions/useAddRecentTransaction.ts\r\nimport { useCallback } from \"react\";\r\nimport { useAccount } from \"wagmi\";\r\nfunction useAddRecentTransaction() {\r\n  const store = useTransactionStore();\r\n  const { address } = useAccount();\r\n  const chainId = useChainId();\r\n  return useCallback((transaction) => {\r\n    if (!address || !chainId) {\r\n      throw new Error(\"No address or chain ID found\");\r\n    }\r\n    store.addTransaction(address, chainId, transaction);\r\n  }, [store, address, chainId]);\r\n}\r\n\r\n// src/__private__/index.ts\r\nvar __private__ = {\r\n  DesktopOptions,\r\n  dialogContent,\r\n  dialogContentMobile,\r\n  MobileOptions\r\n};\r\nexport {\r\n  ConnectButton,\r\n  RainbowKitAuthenticationProvider,\r\n  RainbowKitProvider,\r\n  __private__,\r\n  connectorsForWallets,\r\n  createAuthenticationAdapter,\r\n  cssObjectFromTheme,\r\n  cssStringFromTheme,\r\n  darkTheme,\r\n  getDefaultWallets,\r\n  getWalletConnectConnector,\r\n  lightTheme,\r\n  midnightTheme,\r\n  useAccountModal,\r\n  useAddRecentTransaction,\r\n  useChainModal,\r\n  useConnectModal\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}