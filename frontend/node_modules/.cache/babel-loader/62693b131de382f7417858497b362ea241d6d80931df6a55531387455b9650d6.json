{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\n/*\r\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\r\n * property decorators (but not class decorators) in this file that have\r\n * an @ExportDecoratedItems annotation must be defined as a regular function,\r\n * not an arrow function.\r\n */\nimport { property } from './property.js';\n/**\r\n * Declares a private or protected reactive property that still triggers\r\n * updates to the element when it changes. It does not reflect from the\r\n * corresponding attribute.\r\n *\r\n * Properties declared this way must not be used from HTML or HTML templating\r\n * systems, they're solely for properties internal to the element. These\r\n * properties may be renamed by optimization tools like closure compiler.\r\n * @category Decorator\r\n */\nexport function state(options) {\n  return property({\n    ...options,\n    state: true\n  });\n}","map":{"version":3,"names":["property","state","options"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Artica\\artica-repo\\frontend\\node_modules\\@lit\\reactive-element\\src\\decorators\\state.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n"],"mappings":"AAAA;;;;;AAMA;;;;;;AAOA,SAAQA,QAAQ,QAAO,eAAe;AAWtC;;;;;;;;;;AAUA,OAAM,SAAUC,KAAKA,CAACC,OAAqC;EACzD,OAAOF,QAAQ,CAAC;IACd,GAAGE,OAAO;IACVD,KAAK,EAAE;GACR,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}