{"ast":null,"code":"export function getParameterCacheKey(param, type) {\n  if (type) return `${type}:${param}`;\n  return param;\n}\nexport const parameterCache = new Map([['address', {\n  type: 'address'\n}], ['bool', {\n  type: 'bool'\n}], ['bytes', {\n  type: 'bytes'\n}], ['bytes32', {\n  type: 'bytes32'\n}], ['int', {\n  type: 'int256'\n}], ['int256', {\n  type: 'int256'\n}], ['string', {\n  type: 'string'\n}], ['uint', {\n  type: 'uint256'\n}], ['uint8', {\n  type: 'uint8'\n}], ['uint16', {\n  type: 'uint16'\n}], ['uint24', {\n  type: 'uint24'\n}], ['uint32', {\n  type: 'uint32'\n}], ['uint64', {\n  type: 'uint64'\n}], ['uint96', {\n  type: 'uint96'\n}], ['uint112', {\n  type: 'uint112'\n}], ['uint160', {\n  type: 'uint160'\n}], ['uint192', {\n  type: 'uint192'\n}], ['uint256', {\n  type: 'uint256'\n}], ['address owner', {\n  type: 'address',\n  name: 'owner'\n}], ['address to', {\n  type: 'address',\n  name: 'to'\n}], ['bool approved', {\n  type: 'bool',\n  name: 'approved'\n}], ['bytes _data', {\n  type: 'bytes',\n  name: '_data'\n}], ['bytes data', {\n  type: 'bytes',\n  name: 'data'\n}], ['bytes signature', {\n  type: 'bytes',\n  name: 'signature'\n}], ['bytes32 hash', {\n  type: 'bytes32',\n  name: 'hash'\n}], ['bytes32 r', {\n  type: 'bytes32',\n  name: 'r'\n}], ['bytes32 root', {\n  type: 'bytes32',\n  name: 'root'\n}], ['bytes32 s', {\n  type: 'bytes32',\n  name: 's'\n}], ['string name', {\n  type: 'string',\n  name: 'name'\n}], ['string symbol', {\n  type: 'string',\n  name: 'symbol'\n}], ['string tokenURI', {\n  type: 'string',\n  name: 'tokenURI'\n}], ['uint tokenId', {\n  type: 'uint256',\n  name: 'tokenId'\n}], ['uint8 v', {\n  type: 'uint8',\n  name: 'v'\n}], ['uint256 balance', {\n  type: 'uint256',\n  name: 'balance'\n}], ['uint256 tokenId', {\n  type: 'uint256',\n  name: 'tokenId'\n}], ['uint256 value', {\n  type: 'uint256',\n  name: 'value'\n}], ['event:address indexed from', {\n  type: 'address',\n  name: 'from',\n  indexed: true\n}], ['event:address indexed to', {\n  type: 'address',\n  name: 'to',\n  indexed: true\n}], ['event:uint indexed tokenId', {\n  type: 'uint256',\n  name: 'tokenId',\n  indexed: true\n}], ['event:uint256 indexed tokenId', {\n  type: 'uint256',\n  name: 'tokenId',\n  indexed: true\n}]]);","map":{"version":3,"names":["getParameterCacheKey","param","type","parameterCache","Map","name","indexed"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Artica\\artica-repo\\frontend\\node_modules\\abitype\\src\\human-readable\\runtime\\cache.ts"],"sourcesContent":["import type { AbiItemType, AbiParameter } from '../../abi.js'\r\n\r\n/**\r\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\r\n * @param param ABI parameter string\r\n * @param type ABI parameter type\r\n * @returns Cache key for {@link parameterCache}\r\n */\r\nexport function getParameterCacheKey(\r\n  param: string,\r\n  type?: AbiItemType | 'struct',\r\n) {\r\n  if (type) return `${type}:${param}`\r\n  return param\r\n}\r\n\r\n/**\r\n * Basic cache seeded with common ABI parameter strings.\r\n *\r\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\r\n */\r\nexport const parameterCache = new Map<\r\n  string,\r\n  AbiParameter & { indexed?: boolean }\r\n>([\r\n  // Unnamed\r\n  ['address', { type: 'address' }],\r\n  ['bool', { type: 'bool' }],\r\n  ['bytes', { type: 'bytes' }],\r\n  ['bytes32', { type: 'bytes32' }],\r\n  ['int', { type: 'int256' }],\r\n  ['int256', { type: 'int256' }],\r\n  ['string', { type: 'string' }],\r\n  ['uint', { type: 'uint256' }],\r\n  ['uint8', { type: 'uint8' }],\r\n  ['uint16', { type: 'uint16' }],\r\n  ['uint24', { type: 'uint24' }],\r\n  ['uint32', { type: 'uint32' }],\r\n  ['uint64', { type: 'uint64' }],\r\n  ['uint96', { type: 'uint96' }],\r\n  ['uint112', { type: 'uint112' }],\r\n  ['uint160', { type: 'uint160' }],\r\n  ['uint192', { type: 'uint192' }],\r\n  ['uint256', { type: 'uint256' }],\r\n\r\n  // Named\r\n  ['address owner', { type: 'address', name: 'owner' }],\r\n  ['address to', { type: 'address', name: 'to' }],\r\n  ['bool approved', { type: 'bool', name: 'approved' }],\r\n  ['bytes _data', { type: 'bytes', name: '_data' }],\r\n  ['bytes data', { type: 'bytes', name: 'data' }],\r\n  ['bytes signature', { type: 'bytes', name: 'signature' }],\r\n  ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\r\n  ['bytes32 r', { type: 'bytes32', name: 'r' }],\r\n  ['bytes32 root', { type: 'bytes32', name: 'root' }],\r\n  ['bytes32 s', { type: 'bytes32', name: 's' }],\r\n  ['string name', { type: 'string', name: 'name' }],\r\n  ['string symbol', { type: 'string', name: 'symbol' }],\r\n  ['string tokenURI', { type: 'string', name: 'tokenURI' }],\r\n  ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\r\n  ['uint8 v', { type: 'uint8', name: 'v' }],\r\n  ['uint256 balance', { type: 'uint256', name: 'balance' }],\r\n  ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\r\n  ['uint256 value', { type: 'uint256', name: 'value' }],\r\n\r\n  // Indexed\r\n  [\r\n    'event:address indexed from',\r\n    { type: 'address', name: 'from', indexed: true },\r\n  ],\r\n  ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\r\n  [\r\n    'event:uint indexed tokenId',\r\n    { type: 'uint256', name: 'tokenId', indexed: true },\r\n  ],\r\n  [\r\n    'event:uint256 indexed tokenId',\r\n    { type: 'uint256', name: 'tokenId', indexed: true },\r\n  ],\r\n])\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}